apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "${rootDir}/environment/environment.gradle"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.clientsupport"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("../environment/release-keystore.jks")
            storePassword environment.getValue("RELEASE_SIGNING_STORE_PASSWORD")
            keyAlias environment.getValue("RELEASE_SIGNING_KEY_ALIAS")
            keyPassword environment.getValue("RELEASE_SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        base {
            buildConfigField "String", "REMOTE_SUBDOMAIN", environment.getValueForBuildConfig("REMOTE_SUBDOMAIN")
            buildConfigField "String", "REMOTE_USERNAME", environment.getValueForBuildConfig("REMOTE_USERNAME")
            buildConfigField "String", "REMOTE_PASSWORD", environment.getValueForBuildConfig("REMOTE_PASSWORD")
            buildConfigField "long", "REMOTE_VIEW_ID", environment.getValue("REMOTE_VIEW_ID")

            debuggable true
        }
        debug {
            initWith buildTypes.base
            signingConfig signingConfigs.debug

            applicationIdSuffix ".debug"
        }
        release {
            initWith buildTypes.base
            signingConfig signingConfigs.release

            zipAlignEnabled true
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet false
        abortOnError false
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ANDROID
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:design:$support_version"

    // REACTIVE
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    // KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // DAGGER
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_log_version"

    // ARCHITECTURE COMPONENTS
    implementation "android.arch.lifecycle:extensions:$architecture_components_version"
    implementation "android.arch.lifecycle:reactivestreams:$architecture_components_version"
    kapt "android.arch.lifecycle:compiler:$architecture_components_version"
    implementation "android.arch.persistence.room:runtime:$room_database_version"
    implementation "android.arch.persistence.room:rxjava2:$room_database_version"
    kapt "android.arch.persistence.room:compiler:$room_database_version"

    // DATE AND TIME
    implementation "joda-time:joda-time:$joda_time_version"

    // TEST
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "com.android.support.test:runner:$test_runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}